apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentos-api
  namespace: production
  labels:
    app: agentos
    component: api
    environment: production
    version: "1.0.0"
  annotations:
    description: "AgentOS API deployment"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: agentos
      component: api
  template:
    metadata:
      labels:
        app: agentos
        component: api
        environment: production
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: agentos-api
      imagePullSecrets:
        - name: registry-secret

      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - agentos
                    - key: component
                      operator: In
                      values:
                        - api
                topologyKey: kubernetes.io/hostname

      # Init Container for Database Migration
      initContainers:
        - name: db-migration
          image: ghcr.io/agentos/api:latest
          command: ["alembic", "upgrade", "head"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: database-url
          envFrom:
            - configMapRef:
                name: agentos-config
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL

      containers:
        # Main API Container
        - name: api
          image: ghcr.io/agentos/api:latest
          imagePullPolicy: Always

          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          # Environment Variables from ConfigMap
          envFrom:
            - configMapRef:
                name: agentos-config

          # Environment Variables from Secrets
          env:
            # Core Secrets
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: redis-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: jwt-secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: encryption-key

            # Authentication
            - name: CLERK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: clerk-secret-key
            - name: CLERK_PUBLISHABLE_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: clerk-publishable-key
            - name: CLERK_JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-secrets
                  key: clerk-jwt-key

            # LLM APIs
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-llm-secrets
                  key: openai-api-key
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-llm-secrets
                  key: anthropic-api-key
            - name: TOGETHER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-llm-secrets
                  key: together-api-key
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-llm-secrets
                  key: groq-api-key

            # External Services
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: stripe-secret-key
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: stripe-webhook-secret
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: sentry-dsn
            - name: RESEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: resend-api-key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: aws-secret-access-key
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: s3-bucket
            - name: QDRANT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: qdrant-api-key
            - name: QDRANT_URL
              valueFrom:
                secretKeyRef:
                  name: agentos-external-secrets
                  key: qdrant-url

          # Resource Limits and Requests
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "2Gi"
              cpu: "2000m"
              ephemeral-storage: "2Gi"

          # Security Context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000

          # Health Checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30

          # Volume Mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
            - name: logs
              mountPath: /var/log/agentos

        # Metrics Exporter Sidecar
        - name: metrics-exporter
          image: prom/node-exporter:latest
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
          args:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)'
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534

      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: logs
          emptyDir: {}

      # DNS Policy
      dnsPolicy: ClusterFirst
      restartPolicy: Always

      # Termination Grace Period
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agentos-api
  namespace: production
  labels:
    app: agentos
    component: api
    environment: production
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/agentos-production-app-role
automountServiceAccountToken: true

---
apiVersion: v1
kind: Service
metadata:
  name: agentos-api
  namespace: production
  labels:
    app: agentos
    component: api
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /health
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: LoadBalancer
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: http
      protocol: TCP
  selector:
    app: agentos
    component: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agentos-api-hpa
  namespace: production
  labels:
    app: agentos
    component: api-hpa
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agentos-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agentos-api-pdb
  namespace: production
  labels:
    app: agentos
    component: api-pdb
    environment: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: agentos
      component: api
apiVersion: v1
kind: Secret
metadata:
  name: agentos-secrets
  namespace: production
  labels:
    app: agentos
    component: secrets
    environment: production
  annotations:
    description: "Core secrets for AgentOS application"
type: Opaque
stringData:
  # Database
  database-url: "postgresql+asyncpg://agentos_admin:REPLACE_WITH_ACTUAL_PASSWORD@agentos-production.cluster-xyz.us-east-1.rds.amazonaws.com:5432/agentos"

  # Redis
  redis-url: "redis://:REPLACE_WITH_ACTUAL_PASSWORD@agentos-production.cache.amazonaws.com:6379/0"

  # JWT & Encryption
  jwt-secret: "REPLACE_WITH_ACTUAL_JWT_SECRET"
  encryption-key: "REPLACE_WITH_ACTUAL_ENCRYPTION_KEY"

  # Clerk Authentication
  clerk-secret-key: "sk_live_REPLACE_WITH_ACTUAL_CLERK_SECRET"
  clerk-publishable-key: "pk_live_REPLACE_WITH_ACTUAL_CLERK_KEY"
  clerk-jwt-key: "REPLACE_WITH_ACTUAL_CLERK_JWT_KEY"

---
apiVersion: v1
kind: Secret
metadata:
  name: agentos-llm-secrets
  namespace: production
  labels:
    app: agentos
    component: llm-secrets
    environment: production
type: Opaque
stringData:
  # LLM Provider APIs
  openai-api-key: "sk-REPLACE_WITH_ACTUAL_OPENAI_KEY"
  anthropic-api-key: "sk-ant-REPLACE_WITH_ACTUAL_ANTHROPIC_KEY"
  together-api-key: "REPLACE_WITH_ACTUAL_TOGETHER_KEY"
  groq-api-key: "REPLACE_WITH_ACTUAL_GROQ_KEY"

---
apiVersion: v1
kind: Secret
metadata:
  name: agentos-external-secrets
  namespace: production
  labels:
    app: agentos
    component: external-secrets
    environment: production
type: Opaque
stringData:
  # Payment
  stripe-secret-key: "sk_live_REPLACE_WITH_ACTUAL_STRIPE_KEY"
  stripe-webhook-secret: "whsec_REPLACE_WITH_ACTUAL_WEBHOOK_SECRET"

  # Monitoring
  sentry-dsn: "https://REPLACE_WITH_ACTUAL_SENTRY_DSN@sentry.io/project"
  datadog-api-key: "REPLACE_WITH_ACTUAL_DATADOG_KEY"
  datadog-app-key: "REPLACE_WITH_ACTUAL_DATADOG_APP_KEY"

  # Email
  resend-api-key: "re_REPLACE_WITH_ACTUAL_RESEND_KEY"

  # Storage
  aws-access-key-id: "AKIA_REPLACE_WITH_ACTUAL_ACCESS_KEY"
  aws-secret-access-key: "REPLACE_WITH_ACTUAL_SECRET_ACCESS_KEY"
  s3-bucket: "agentos-production-storage"

  # Vector Database
  qdrant-api-key: "REPLACE_WITH_ACTUAL_QDRANT_KEY"
  qdrant-url: "https://agentos-production.qdrant.io"

---
apiVersion: v1
kind: Secret
metadata:
  name: agentos-integration-secrets
  namespace: production
  labels:
    app: agentos
    component: integration-secrets
    environment: production
type: Opaque
stringData:
  # WhatsApp Business
  whatsapp-access-token: "REPLACE_WITH_ACTUAL_WHATSAPP_TOKEN"
  whatsapp-phone-number-id: "REPLACE_WITH_ACTUAL_PHONE_NUMBER_ID"
  whatsapp-business-account-id: "REPLACE_WITH_ACTUAL_BUSINESS_ACCOUNT_ID"
  whatsapp-webhook-verify-token: "REPLACE_WITH_ACTUAL_WEBHOOK_TOKEN"

  # Google Workspace
  google-client-id: "REPLACE_WITH_ACTUAL_GOOGLE_CLIENT_ID"
  google-client-secret: "REPLACE_WITH_ACTUAL_GOOGLE_CLIENT_SECRET"

  # Social Media
  instagram-access-token: "REPLACE_WITH_ACTUAL_INSTAGRAM_TOKEN"
  facebook-access-token: "REPLACE_WITH_ACTUAL_FACEBOOK_TOKEN"
  linkedin-client-id: "REPLACE_WITH_ACTUAL_LINKEDIN_CLIENT_ID"
  linkedin-client-secret: "REPLACE_WITH_ACTUAL_LINKEDIN_SECRET"
  twitter-api-key: "REPLACE_WITH_ACTUAL_TWITTER_KEY"
  twitter-api-secret: "REPLACE_WITH_ACTUAL_TWITTER_SECRET"

  # Communication
  slack-bot-token: "xoxb-REPLACE_WITH_ACTUAL_SLACK_TOKEN"
  slack-signing-secret: "REPLACE_WITH_ACTUAL_SLACK_SECRET"
  discord-bot-token: "REPLACE_WITH_ACTUAL_DISCORD_TOKEN"
  twilio-account-sid: "REPLACE_WITH_ACTUAL_TWILIO_SID"
  twilio-auth-token: "REPLACE_WITH_ACTUAL_TWILIO_TOKEN"
  twilio-phone-number: "+1REPLACE_WITH_ACTUAL_PHONE"

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: production
  labels:
    app: agentos
    component: registry
    environment: production
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "REPLACE_WITH_GITHUB_USERNAME",
          "password": "REPLACE_WITH_GITHUB_TOKEN",
          "auth": "REPLACE_WITH_BASE64_ENCODED_CREDENTIALS"
        }
      }
    }